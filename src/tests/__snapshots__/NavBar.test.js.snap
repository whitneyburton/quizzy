// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NavBar should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NavBar
    filterCardsByCategory={[MockFunction]}
    updateCategory={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="quizzy-title"
        >
          QUIZZY!
        </h1>,
        <div
          className="filter-category-buttons"
        >
          <p
            className="choose-category"
          >
            Choose an array prototype category:
          </p>
          <button
            className="mutator-button buttons filters"
            onClick={[Function]}
            type="button"
          >
            Mutator
          </button>
          <button
            className="accessor-button buttons filters"
            onClick={[Function]}
            type="button"
          >
            Accessor
          </button>
          <button
            className="iteration-button buttons filters"
            onClick={[Function]}
            type="button"
          >
            Iteration
          </button>
          <button
            className="all-methods-button buttons filters"
            onClick={[Function]}
            type="button"
          >
            All Methods!
          </button>
        </div>,
      ],
      "className": "NavBar",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "QUIZZY!",
          "className": "quizzy-title",
        },
        "ref": null,
        "rendered": "QUIZZY!",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p
              className="choose-category"
            >
              Choose an array prototype category:
            </p>,
            <button
              className="mutator-button buttons filters"
              onClick={[Function]}
              type="button"
            >
              Mutator
            </button>,
            <button
              className="accessor-button buttons filters"
              onClick={[Function]}
              type="button"
            >
              Accessor
            </button>,
            <button
              className="iteration-button buttons filters"
              onClick={[Function]}
              type="button"
            >
              Iteration
            </button>,
            <button
              className="all-methods-button buttons filters"
              onClick={[Function]}
              type="button"
            >
              All Methods!
            </button>,
          ],
          "className": "filter-category-buttons",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Choose an array prototype category:",
              "className": "choose-category",
            },
            "ref": null,
            "rendered": "Choose an array prototype category:",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Mutator",
              "className": "mutator-button buttons filters",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": "Mutator",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Accessor",
              "className": "accessor-button buttons filters",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": "Accessor",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Iteration",
              "className": "iteration-button buttons filters",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": "Iteration",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "All Methods!",
              "className": "all-methods-button buttons filters",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": "All Methods!",
            "type": "button",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="quizzy-title"
          >
            QUIZZY!
          </h1>,
          <div
            className="filter-category-buttons"
          >
            <p
              className="choose-category"
            >
              Choose an array prototype category:
            </p>
            <button
              className="mutator-button buttons filters"
              onClick={[Function]}
              type="button"
            >
              Mutator
            </button>
            <button
              className="accessor-button buttons filters"
              onClick={[Function]}
              type="button"
            >
              Accessor
            </button>
            <button
              className="iteration-button buttons filters"
              onClick={[Function]}
              type="button"
            >
              Iteration
            </button>
            <button
              className="all-methods-button buttons filters"
              onClick={[Function]}
              type="button"
            >
              All Methods!
            </button>
          </div>,
        ],
        "className": "NavBar",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "QUIZZY!",
            "className": "quizzy-title",
          },
          "ref": null,
          "rendered": "QUIZZY!",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p
                className="choose-category"
              >
                Choose an array prototype category:
              </p>,
              <button
                className="mutator-button buttons filters"
                onClick={[Function]}
                type="button"
              >
                Mutator
              </button>,
              <button
                className="accessor-button buttons filters"
                onClick={[Function]}
                type="button"
              >
                Accessor
              </button>,
              <button
                className="iteration-button buttons filters"
                onClick={[Function]}
                type="button"
              >
                Iteration
              </button>,
              <button
                className="all-methods-button buttons filters"
                onClick={[Function]}
                type="button"
              >
                All Methods!
              </button>,
            ],
            "className": "filter-category-buttons",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Choose an array prototype category:",
                "className": "choose-category",
              },
              "ref": null,
              "rendered": "Choose an array prototype category:",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Mutator",
                "className": "mutator-button buttons filters",
                "onClick": [Function],
                "type": "button",
              },
              "ref": null,
              "rendered": "Mutator",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Accessor",
                "className": "accessor-button buttons filters",
                "onClick": [Function],
                "type": "button",
              },
              "ref": null,
              "rendered": "Accessor",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Iteration",
                "className": "iteration-button buttons filters",
                "onClick": [Function],
                "type": "button",
              },
              "ref": null,
              "rendered": "Iteration",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "All Methods!",
                "className": "all-methods-button buttons filters",
                "onClick": [Function],
                "type": "button",
              },
              "ref": null,
              "rendered": "All Methods!",
              "type": "button",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
