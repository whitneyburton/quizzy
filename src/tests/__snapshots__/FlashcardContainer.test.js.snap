// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FlashcardContainer should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FlashcardContainer
    category="All Methods!"
    filteredCards={
      Array [
        Object {},
        Object {},
        Object {},
      ]
    }
    saveToStorage={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2
          className="all-flashcards-header"
        >
          All Methods!
        </h2>,
        Array [
          <Flashcard
            filteredCards={
              Array [
                Object {},
                Object {},
                Object {},
              ]
            }
            flashcard={Object {}}
            saveToStorage={[MockFunction]}
          />,
          <Flashcard
            filteredCards={
              Array [
                Object {},
                Object {},
                Object {},
              ]
            }
            flashcard={Object {}}
            saveToStorage={[MockFunction]}
          />,
          <Flashcard
            filteredCards={
              Array [
                Object {},
                Object {},
                Object {},
              ]
            }
            flashcard={Object {}}
            saveToStorage={[MockFunction]}
          />,
        ],
      ],
      "className": "FlashcardContainer",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "All Methods!",
          "className": "all-flashcards-header",
        },
        "ref": null,
        "rendered": "All Methods!",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "filteredCards": Array [
            Object {},
            Object {},
            Object {},
          ],
          "flashcard": Object {},
          "removeCorrectFromStorage": undefined,
          "saveToStorage": [MockFunction],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "filteredCards": Array [
            Object {},
            Object {},
            Object {},
          ],
          "flashcard": Object {},
          "removeCorrectFromStorage": undefined,
          "saveToStorage": [MockFunction],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "filteredCards": Array [
            Object {},
            Object {},
            Object {},
          ],
          "flashcard": Object {},
          "removeCorrectFromStorage": undefined,
          "saveToStorage": [MockFunction],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2
            className="all-flashcards-header"
          >
            All Methods!
          </h2>,
          Array [
            <Flashcard
              filteredCards={
                Array [
                  Object {},
                  Object {},
                  Object {},
                ]
              }
              flashcard={Object {}}
              saveToStorage={[MockFunction]}
            />,
            <Flashcard
              filteredCards={
                Array [
                  Object {},
                  Object {},
                  Object {},
                ]
              }
              flashcard={Object {}}
              saveToStorage={[MockFunction]}
            />,
            <Flashcard
              filteredCards={
                Array [
                  Object {},
                  Object {},
                  Object {},
                ]
              }
              flashcard={Object {}}
              saveToStorage={[MockFunction]}
            />,
          ],
        ],
        "className": "FlashcardContainer",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "All Methods!",
            "className": "all-flashcards-header",
          },
          "ref": null,
          "rendered": "All Methods!",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "filteredCards": Array [
              Object {},
              Object {},
              Object {},
            ],
            "flashcard": Object {},
            "removeCorrectFromStorage": undefined,
            "saveToStorage": [MockFunction],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "filteredCards": Array [
              Object {},
              Object {},
              Object {},
            ],
            "flashcard": Object {},
            "removeCorrectFromStorage": undefined,
            "saveToStorage": [MockFunction],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "filteredCards": Array [
              Object {},
              Object {},
              Object {},
            ],
            "flashcard": Object {},
            "removeCorrectFromStorage": undefined,
            "saveToStorage": [MockFunction],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
